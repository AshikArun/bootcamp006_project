sidebarPanel(
selectInput("sea",label="Season",
choices=unique(df_sea$season),
selected="2015/2016"),
selectInput("lea",label="League",
choices=unique(df_sea$country),
selected="England")
),
mainPanel(
tabsetPanel(
tabPanel("Soccer League Map",leafletOutput("myMap")),
tabPanel("Trend by Season",plotOutput("myLinechart")),
tabPanel("League by Season",plotlyOutput("myTeamchart"))
)
)
)
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(ggvis)
library(ggvis)
shiny::runApp()
library(shiny)
library(leaflet)
library(ggvis)
ui = fluidPage(
titlePanel("European Soccer Leagues"),
sidebarLayout(
sidebarPanel(
selectInput("sea",label="Season",
choices=unique(df_sea$season),
selected="2015/2016"),
selectInput("lea",label="League",
choices=unique(df_sea$country),
selected="England")
),
mainPanel(
tabsetPanel(
tabPanel("Soccer League Map",leafletOutput("myMap")),
tabPanel("Trend by Season",plotOutput("myLinechart")),
tabPanel("League by Season",ggvisOutput("myTeamchart"))
)
)
)
)
library(shiny)
library(rgdal)
library(leaflet)
library(dplyr)
library(ggplot2)
library(ggvis)
server = function(input, output) {
season_select <- reactive({
season_select <- input$sea
})
data_select_season <- reactive({
df_lea = df_sea %>% filter(season==season_select())
## join the map table with entropy table to create a shp file for leaflet
oo <- inner_join(league_countries@data, df_lea, by=c("ID"="country"))
data_select_season=league_countries
data_select_season@data=oo
data_select_season
})
league_select <- reactive({
league_select <- input$lea
})
data_select_league <- reactive({
data_select_league=df_sea%>% filter(country==league_select())
data_select_league
})
data_select_team <- reactive({
data_select_team=df_team%>%filter(country==league_select())%>%group_by(season,team)%>%mutate(team_entropy=mean(entropy))
data_select_team
})
output$myMap = renderLeaflet({
## league avatar icon address
eng <- "C:/Users/ricky/Dropbox/bootcamp/eng.png"
sco <- "C:/Users/ricky/Dropbox/bootcamp/sco.png"
ita <- "C:/Users/ricky/Dropbox/bootcamp/ita.png"
spa <- "C:/Users/ricky/Dropbox/bootcamp/spa.png"
ger <- "C:/Users/ricky/Dropbox/bootcamp/ger.png"
ned <- "C:/Users/ricky/Dropbox/bootcamp/ned.png"
fra <- "C:/Users/ricky/Dropbox/bootcamp/fra.png"
por <- "C:/Users/ricky/Dropbox/bootcamp/por.png"
mypal <- colorNumeric("OrRd",data_select_season()@data$entropy)
leaflet(data_select_season()) %>%
addTiles()%>%
##addLegend("bottomright", pal = mypal, values = data_select_season()@data$entropy, title = "Preditibility", opacity = 0.5)%>%
addMarkers(0.1278,51.5074, popup = paste0("<img src = ", eng, ">")) %>%
addMarkers(2.3522,48.8566, popup = paste0("<img src = ", fra, ">")) %>%
addMarkers(13.4050,52.5200, popup = paste0("<img src = ", ger, ">")) %>%
addMarkers(-9.1393,38.7223, popup = paste0("<img src = ", por, ">")) %>%
addMarkers(-3.7038,40.4168, popup = paste0("<img src = ", spa, ">")) %>%
addMarkers(-3.1883,55.9533, popup = paste0("<img src = ", sco, ">")) %>%
addMarkers(12.4964,41.9028, popup = paste0("<img src = ", ita, ">")) %>%
addMarkers(4.8952,52.3702, popup = paste0("<img src = ", ned, ">"))%>%
addPolygons(smoothFactor = 0.2, fillOpacity = 1,color = ~mypal(entropy), stroke = FALSE)%>%
addLegend("bottomright", pal = mypal, values = data_select_season()@data$entropy, title = "Preditibility", opacity = 0.5)
})
output$myLinechart=renderPlot({
ggplot(data=data_select_league(), aes(x=season, y=entropy)) +
ggtitle(league_select())+
geom_line() +
labs(x="Season",y="Predictibility")+
geom_point(size=6, shape=20, fill="blue") +
theme(plot.title = element_text(size=24,face="bold",color="deepskyblue2"))+
theme(axis.title = element_text(size=24,face="bold",color="deepskyblue2"))
})
##################
#  output$myTeamchart=renderPlot({
#    ggplot(data=data_select_team(),aes(x=season, y=data_select_team()$team_entropy)) +
#      geom_point(aes(text=data_select_team()$team,colour = data_select_team()$team),size=2)+
#      ggtitle(league_select())+
#      theme(plot.title = element_text(size=24,face="bold",color="deepskyblue2"))+
#      theme(axis.title = element_text(size=24,face="bold",color="deepskyblue2"))+
#      theme(axis.text.x= element_text(size=10))+
#      theme(axis.text.y= element_text(size=10))+
#      labs(x="Season",y="Entropy")+
#      theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
#            panel.background = element_blank(), axis.line = element_line(colour = "black"))
#
#     })
#####################
hoverText = data_select_team()$team
observe({
data_select_team %>% ggvis(~season, ~team_entropy) %>% layer_points() %>%
add_tooltip(hoverText, "hover") %>% bind_shiny("myTeamchart")
})
#  output$myTeamchart=renderPlot({
#    ggplot(data=data_select_team(),aes(x=season, y=data_select_team()$team_entropy)) +
#      geom_point(aes(text=data_select_team()$team,colour = data_select_team()$team),size=2)+
#      ggtitle(league_select())+
#      theme(plot.title = element_text(size=24,face="bold",color="deepskyblue2"))+
#      theme(axis.title = element_text(size=24,face="bold",color="deepskyblue2"))+
#      theme(axis.text.x= element_text(size=10))+
#      theme(axis.text.y= element_text(size=10))+
#      labs(x="Season",y="Entropy")+
#      theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
#            panel.background = element_blank(), axis.line = element_line(colour = "black"))
#
#     })
}
library(shiny)
library(rgdal)
library(leaflet)
library(dplyr)
library(ggplot2)
library(ggvis)
server = function(input, output) {
season_select <- reactive({
season_select <- input$sea
})
data_select_season <- reactive({
df_lea = df_sea %>% filter(season==season_select())
## join the map table with entropy table to create a shp file for leaflet
oo <- inner_join(league_countries@data, df_lea, by=c("ID"="country"))
data_select_season=league_countries
data_select_season@data=oo
data_select_season
})
league_select <- reactive({
league_select <- input$lea
})
data_select_league <- reactive({
data_select_league=df_sea%>% filter(country==league_select())
data_select_league
})
data_select_team <- reactive({
data_select_team=df_team%>%filter(country==league_select())%>%group_by(season,team)%>%mutate(team_entropy=mean(entropy))
data_select_team
})
output$myMap = renderLeaflet({
## league avatar icon address
eng <- "C:/Users/ricky/Dropbox/bootcamp/eng.png"
sco <- "C:/Users/ricky/Dropbox/bootcamp/sco.png"
ita <- "C:/Users/ricky/Dropbox/bootcamp/ita.png"
spa <- "C:/Users/ricky/Dropbox/bootcamp/spa.png"
ger <- "C:/Users/ricky/Dropbox/bootcamp/ger.png"
ned <- "C:/Users/ricky/Dropbox/bootcamp/ned.png"
fra <- "C:/Users/ricky/Dropbox/bootcamp/fra.png"
por <- "C:/Users/ricky/Dropbox/bootcamp/por.png"
mypal <- colorNumeric("OrRd",data_select_season()@data$entropy)
leaflet(data_select_season()) %>%
addTiles()%>%
##addLegend("bottomright", pal = mypal, values = data_select_season()@data$entropy, title = "Preditibility", opacity = 0.5)%>%
addMarkers(0.1278,51.5074, popup = paste0("<img src = ", eng, ">")) %>%
addMarkers(2.3522,48.8566, popup = paste0("<img src = ", fra, ">")) %>%
addMarkers(13.4050,52.5200, popup = paste0("<img src = ", ger, ">")) %>%
addMarkers(-9.1393,38.7223, popup = paste0("<img src = ", por, ">")) %>%
addMarkers(-3.7038,40.4168, popup = paste0("<img src = ", spa, ">")) %>%
addMarkers(-3.1883,55.9533, popup = paste0("<img src = ", sco, ">")) %>%
addMarkers(12.4964,41.9028, popup = paste0("<img src = ", ita, ">")) %>%
addMarkers(4.8952,52.3702, popup = paste0("<img src = ", ned, ">"))%>%
addPolygons(smoothFactor = 0.2, fillOpacity = 1,color = ~mypal(entropy), stroke = FALSE)%>%
addLegend("bottomright", pal = mypal, values = data_select_season()@data$entropy, title = "Preditibility", opacity = 0.5)
})
output$myLinechart=renderPlot({
ggplot(data=data_select_league(), aes(x=season, y=entropy)) +
ggtitle(league_select())+
geom_line() +
labs(x="Season",y="Predictibility")+
geom_point(size=6, shape=20, fill="blue") +
theme(plot.title = element_text(size=24,face="bold",color="deepskyblue2"))+
theme(axis.title = element_text(size=24,face="bold",color="deepskyblue2"))
})
##################
#  output$myTeamchart=renderPlot({
#    ggplot(data=data_select_team(),aes(x=season, y=data_select_team()$team_entropy)) +
#      geom_point(aes(text=data_select_team()$team,colour = data_select_team()$team),size=2)+
#      ggtitle(league_select())+
#      theme(plot.title = element_text(size=24,face="bold",color="deepskyblue2"))+
#      theme(axis.title = element_text(size=24,face="bold",color="deepskyblue2"))+
#      theme(axis.text.x= element_text(size=10))+
#      theme(axis.text.y= element_text(size=10))+
#      labs(x="Season",y="Entropy")+
#      theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
#            panel.background = element_blank(), axis.line = element_line(colour = "black"))
#
#     })
#####################
hoverText = data_select_team()$team
observe({
data_select_team %>% ggvis(~season, ~team_entropy) %>% layer_points() %>%
add_tooltip(hoverText(), "hover") %>% bind_shiny("myTeamchart")
})
#  output$myTeamchart=renderPlot({
#    ggplot(data=data_select_team(),aes(x=season, y=data_select_team()$team_entropy)) +
#      geom_point(aes(text=data_select_team()$team,colour = data_select_team()$team),size=2)+
#      ggtitle(league_select())+
#      theme(plot.title = element_text(size=24,face="bold",color="deepskyblue2"))+
#      theme(axis.title = element_text(size=24,face="bold",color="deepskyblue2"))+
#      theme(axis.text.x= element_text(size=10))+
#      theme(axis.text.y= element_text(size=10))+
#      labs(x="Season",y="Entropy")+
#      theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
#            panel.background = element_blank(), axis.line = element_line(colour = "black"))
#
#     })
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(df_team)
english = df_team%>%(country=="england")
english = df_team%>%filter(country=="england")
View(english)
english = df_team%>%filter(country=="England")
view(english)
View(english)
t
english = df_team%>%filter(country=="England")%>%group_by(season,team)%>%mutate(team_entropy=mean(entropy))
View(english)
shiny::runApp()
a<-ggplot(data=english,aes(x=season, y=english$team_entropy)) +
ggtitle()+
theme(plot.title = element_text(size=24,face="bold",color="deepskyblue2"))+
theme(axis.title = element_text(size=24,face="bold",color="deepskyblue2"))+
theme(axis.text.x= element_text(size=10))+
theme(axis.text.y= element_text(size=10))+
labs(x="Season",y="Entropy")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
(ggplotly(a))
a<-ggplot(data=english,aes(x=season, y=team_entropy))
(ggplotly(a))
a<-ggplot(data=english,aes(x=season, y=team_entropy))
+
ggtitle()+
theme(plot.title = element_text(size=24,face="bold",color="deepskyblue2"))+
theme(axis.title = element_text(size=24,face="bold",color="deepskyblue2"))+
theme(axis.text.x= element_text(size=10))+
theme(axis.text.y= element_text(size=10))+
labs(x="Season",y="Entropy")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
p<-ggplotly(a)
p
a<-ggplot(data=english,aes(x=season, y=team_entropy))+
geom_point()
p<-ggplotly(a)
p
a
p<-ggplotly(a)
p
library(plotly)
p<-ggplotly(a)
p<-plotly(a)
a
??ggplotly
p<-plotly::ggplotly(a)
p
example(ggplotly)
?ggplotly
ggiris <- qplot(Petal.Width, Sepal.Length, data = iris, color = Species)
ggplotly(ggiris)
data(canada.cities, package = "maps")
viz <- ggplot(canada.cities, aes(long, lat)) +
borders(regions = "canada") +
coord_equal() +
geom_point(aes(text = name, size = pop), colour = "red", alpha = 1/2)
ggplotly(viz)
library(maps)
ggiris <- qplot(Petal.Width, Sepal.Length, data = iris, color = Species)
ggplotly(ggiris)
data(canada.cities, package = "maps")
viz <- ggplot(canada.cities, aes(long, lat)) +
borders(regions = "canada") +
coord_equal() +
geom_point(aes(text = name, size = pop), colour = "red", alpha = 1/2)
ggplotly(viz)
library(maps)
ggiris <- qplot(Petal.Width, Sepal.Length, data = iris, color = Species)
ggplotly(ggiris)
data(canada.cities, package = "maps")
viz <- ggplot(canada.cities, aes(long, lat)) +
borders(regions = "canada") +
coord_equal() +
geom_point(aes(text = name, size = pop), colour = "red", alpha = 1/2)
ggplotly(viz)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
p
s <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
s <- s[order(s$Men), ]
library(plotly)
p <- plot_ly(s, x = Women, y = School, name = "Women",
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = Men, name = "Men", y = School, marker = list(color = "blue"),
mode = "markers") %>%
layout(
title = "Gender earnings disparity",
xaxis = list(title = "Annual Salary (in thousands)"),
margin = list(l = 65)
)
p
s <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
s <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv",setInternet2(TRUE))
setInternet2(use=FALSE)
setInternet2(use=TRUE)
s <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
setInternet2(use=TRUE)
t
s <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
setInternet2(use=TRUE)
s <- s[order(s$Men), ]
s <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
s <- read.csv("http://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
s <- read.csv("http://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
s <- s[order(s$Men), ]
library(plotly)
p <- plot_ly(s, x = Women, y = School, name = "Women",
mode = "markers", marker = list(color = "pink")) %>%
add_trace(x = Men, name = "Men", y = School, marker = list(color = "blue"),
mode = "markers") %>%
layout(
title = "Gender earnings disparity",
xaxis = list(title = "Annual Salary (in thousands)"),
margin = list(l = 65)
)
p
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(df_team)
install.packages(DT)
install.packages("DT")
install.packages("DT")
shiny::runApp()
runApp()
runApp()
runApp()
library(shiny)
library(rgdal)
library(leaflet)
library(dplyr)
library(ggplot2)
library(DT)
server = function(input, output) {
season_select <- reactive({
season_select <- input$sea
})
data_select_season <- reactive({
df_lea = df_sea %>% filter(season==season_select())
## join the map table with entropy table to create a shp file for leaflet
oo <- inner_join(league_countries@data, df_lea, by=c("ID"="country"))
data_select_season=league_countries
data_select_season@data=oo
data_select_season
})
league_select <- reactive({
league_select <- input$lea
})
data_select_league <- reactive({
data_select_league=df_sea%>% filter(country==league_select())
data_select_league
})
data_select_team <- reactive({
data_select_team=df_team%>%filter(country==league_select())%>%group_by(season,team)%>%mutate(team_entropy=mean(entropy))
data_select_team
})
data_select_table <- reactive({
data_select_team=df_team%>%filter(country==league_select())%>%group_by(season_select(),team)%>%mutate(team_entropy=mean(entropy))
data_select_team
})
output$myMap = renderLeaflet({
## league avatar icon address
eng <- "C:/Users/ricky/Dropbox/bootcamp/eng.png"
sco <- "C:/Users/ricky/Dropbox/bootcamp/sco.png"
ita <- "C:/Users/ricky/Dropbox/bootcamp/ita.png"
spa <- "C:/Users/ricky/Dropbox/bootcamp/spa.png"
ger <- "C:/Users/ricky/Dropbox/bootcamp/ger.png"
ned <- "C:/Users/ricky/Dropbox/bootcamp/ned.png"
fra <- "C:/Users/ricky/Dropbox/bootcamp/fra.png"
por <- "C:/Users/ricky/Dropbox/bootcamp/por.png"
mypal <- colorNumeric("OrRd",data_select_season()@data$entropy)
leaflet(data_select_season()) %>%
##addTiles()%>%
##addLegend("bottomright", pal = mypal, values = data_select_season()@data$entropy, title = "Preditibality", opacity = 0.5)%>%
addMarkers(0.1278,51.5074, popup = paste0("<img src = ", eng, ">")) %>%
addMarkers(2.3522,48.8566, popup = paste0("<img src = ", fra, ">")) %>%
addMarkers(13.4050,52.5200, popup = paste0("<img src = ", ger, ">")) %>%
addMarkers(-9.1393,38.7223, popup = paste0("<img src = ", por, ">")) %>%
addMarkers(-3.7038,40.4168, popup = paste0("<img src = ", spa, ">")) %>%
addMarkers(-3.1883,55.9533, popup = paste0("<img src = ", sco, ">")) %>%
addMarkers(12.4964,41.9028, popup = paste0("<img src = ", ita, ">")) %>%
addMarkers(4.8952,52.3702, popup = paste0("<img src = ", ned, ">"))%>%
addPolygons(smoothFactor = 0.2, fillOpacity = 1,color = ~mypal(entropy), stroke = FALSE)%>%
addLegend("bottomright", pal = mypal, values = data_select_season()@data$entropy, title = "Preditibility", opacity = 0.5)
})
output$myLinechart=renderPlot({
ggplot(data=data_select_league(), aes(x=season, y=entropy,color="Purple")) +
ggtitle(league_select())+
labs(x="Season",y="Predictability")+
geom_point(size=6, shape=20, fill="blue") +
theme(plot.title = element_text(size=32,face="bold",color="deepskyblue2"))+
theme(axis.title = element_text(size=20,face="bold",color="deepskyblue2"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
theme(legend.position="none")
})
##################
output$myTeamchart=renderPlotly({
p=ggplot(data=data_select_team(),aes(x=season, y=team_entropy)) +
geom_point(aes(color=team),size=1)+
ggtitle(league_select())+
theme(plot.title = element_text(size=20,face="bold",color="deepskyblue2"))+
theme(axis.title = element_text(size=10,face="bold",color="deepskyblue2"))+
theme(axis.text.x= element_text(angle = 45, hjust = 1,size=8))+
labs(x="Season",y="Predictability")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
##theme(legend.position = "bottom")
ggplotly(p)
})
output$mytable = renderDataTable({
data_select_table()
},
options = list(orderClasses = TRUE))
}
runApp()
runApp()
runApp()
runApp()
xyz=df_team%>%filter(country=="England"&season="2015/2016")%>%group_by(season,team)%>%mutate(team_entropy=mean(entropy))
xyz=df_team%>%filter(country=="England"&season=="2015/2016")%>%group_by(season,team)%>%mutate(team_entropy=mean(entropy))
View(xyz)
xyz=df_team%>%filter(country=="England"&season=="2015/2016")%>%group_by(season,team)%>%summarize(team_entropy=mean(entropy))
View(xyz)
View(df_sea)
data_select_team <- reactive({
data_select_team=df_team%>%filter(country==league_select()) %>% group_by(season,team) %>% summarize(entropy=mean(entropy))
data_select_team
})
runApp()
runApp()
data_select_league <- reactive({
data_select_league=df_sea%>%filter(country==league_select())%>%group_by(season)%>&summarize(entropy=mean(entropy))
data_select_league
})
data_select_league <- reactive({
data_select_league=df_sea%>%filter(country==league_select())%>%group_by(season)%>%summarize(entropy=mean(entropy))
data_select_league
})
data_select_team <- reactive({
data_select_team=df_team%>%filter(country==league_select())%>%group_by(season,team)%>%summarize(entropy=mean(entropy))
data_select_team
})
data_select_table <- reactive({
data_select_table=df_team%>%filter(country==league_select()&season==season_select())%>%group_by(season,team)%>%summarize(entropy=mean(entropy))
data_select_table
})
runApp()
runApp()
runApp()
runApp()
