{
    "collab_server" : "",
    "contents" : "library(dplyr)\nlibrary(stringr)\n# library(RCurl)\n# campaignsXML = getURL(“https://api.constantcontact.com/ws/customers/{username}/campaigns?access_token={token}”)\n\n# v <- read.csv(\"../data/violence.csv\")\n\n# set source and destination port latitude and longitudes\n#read in ihs data\nihs <- read.csv(\"../data/ihs.csv\")\n#fix date format func\nihs$Date <- as.Date(ihs$Date, format = \"%m/%d/%Y\")\nihs$C3 <- as.numeric(gsub(\",\", \"\", as.character(ihs$C3)))\nihs$C4 <- as.numeric(gsub(\",\", \"\", as.character(ihs$C4)))\n#set volume based on C3 + C4\nihs$volume <- ihs$C3 + ihs$C4\n#remove all rows where volume is 0\nihs <- ihs[as.numeric(ihs$volume) != 0, ]\n# return((volume / max(volume, na.rm=TRUE)) * 4)\n# Cut the volumes up into levels corresponding to the\n# 75th, 50th, 25th, percentiles and then all the rest.\ncolors <- as.numeric(\n  cut(ihs$volume,\n      breaks=quantile(ihs$volume, probs=c(0,0.20,0.5,0.75,1), na.rm=TRUE),\n      include.lowest=TRUE)\n)\n# Colors for each level\nihs$color <- c(\"#0055ff\",\"#00aaff\",\"#00ffaa\",\"#aaff00\")[colors]\n\n# read in port data\n# ports <-read.csv(\"../data/ports.csv\")\n# # portsDict <- list(ASSALUYEH = 'ASSULEYAH')\n# # ports$PortName[df$Store.Type %in% c(\"A\", \"C\")]\n# \n# #substr from the end of string func\n# substrRight <- function(x, n){\n#   x <- as.character(x)\n#   substr(x, nchar(x)-n+1, nchar(x))\n# }\n# #convert coordinates func\n# convertCoords <- function (x) {\n#   if (substrRight(x,3) == \"' S\" | substrRight(x,3) == \"' W\") {\n#     x <- gsub(' ','.',substr(x,0,nchar(x)-3))\n#     x <- as.numeric(x)\n#     return(-x)\n#   } else {\n#     x <- gsub(' ','.',substr(x,0,nchar(x)-3))\n#     return(as.numeric(x))\n#   }\n# }\n# #convertlat and long columns\n# ports$Latitude <- sapply(as.character(ports$Latitude), convertCoords)\n# ports$Longitude <- sapply(as.character(ports$Longitude), convertCoords)\n# #convert sources and destination to uppercase\n# ihs$Source..2. <- toupper(ihs$Source..2.)\n# ihs$Destination..2. <- toupper(ihs$Destination..2.)\n# #join tables with new source and destination lat and longs\n# ihs <- left_join(ihs, select(ports,PortName,Latitude,Longitude), by=c('Source..2.' ='PortName')) %>% \n#           rename(Source.Port.Lat=Latitude, Source.Port.Long=Longitude)\n# ihs <- left_join(ihs, select(ports,PortName,Latitude,Longitude), by=c('Destination..1.' ='PortName')) %>%\n#           rename(Destination.Port.Lat=Latitude, Destination.Port.Long=Longitude)\n#set source and destination country latitude and longitudes\ncountries <- read.delim(\"../data/countries.csv\")\n#join tables with new source and destination lat and longs\nihs <- left_join(ihs, select(countries,Country,Latitude,Longitude), by=c('Source..1.' ='Country')) %>% \n  rename(Source.Country.Lat=Latitude, Source.Country.Long=Longitude)\nihs <- left_join(ihs, select(countries,Country,Latitude,Longitude), by=c('Primary.Destination.Country' ='Country')) %>%\n  rename(Destination.Country.Lat=Latitude, Destination.Country.Long=Longitude)\n\n# \n# inventories <- read.csv(\"../data/Propane Inventories.csv\", header=FALSE)\n# dates <- inventories[1, ]\n# totals <- inventories[6, ]\n# inventories <- data.frame()\n# inventories <- rbind(dates[1, ])\n# inventories[2,] <- rbind(totals[1,])\n# inventories <- t(inventories)\n# inventories <- inventories[-1,]\n# x <- left_join(ihs, inventories, by=c(\"1\",\"Date\"))\n\n# inventories <- read.csv(\"../data/Propane Inventories.csv\")\n# sources <- read.csv(\"../data/Volume by Source.csv\")\n# destinations <- read.csv(\"../data/Volume by Destination.csv\")\n# prices <- read.csv(\"../data/Spot Prices.csv\")\n# rates <- read.csv(\"../data/Freight Rates.csv\")\n\n# create variable with colnames as choice\nthemes <- c('Dark','Terrain')",
    "created" : 1469473026922.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1929503657",
    "id" : "7755E108",
    "lastKnownWriteTime" : 1470013716,
    "last_content_update" : 1470013716736,
    "path" : "~/Documents/NYCDSA/Projects/ShinyApp/ShinyApp/global.R",
    "project_path" : "global.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}